"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6615],{8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>c});var s=n(6540);const r={},i=s.createContext(r);function d(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(i.Provider,{value:t},e.children)}},9889:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>a,frontMatter:()=>d,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"Resources/git-cheatsheet","title":"Git Cheatsheet","description":"A quick reference guide to the most commonly used Git commands.","source":"@site/docs/Resources/git-cheatsheet.md","sourceDirName":"Resources","slug":"/Resources/git-cheatsheet","permalink":"/linux-101/docs/Resources/git-cheatsheet","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Conda Guide: Installing Miniforge and Managing Conda Environments","permalink":"/linux-101/docs/Resources/conda-guide"},"next":{"title":"WSL: Installation and Configuration Guide","permalink":"/linux-101/docs/Resources/wsl-guide"}}');var r=n(4848),i=n(8453);const d={},c="Git Cheatsheet",h={},o=[{value:"<strong>Repository Setup</strong>",id:"repository-setup",level:2},{value:"<strong>Working with Changes</strong>",id:"working-with-changes",level:2},{value:"<strong>Working with Remote Repositories</strong>",id:"working-with-remote-repositories",level:2},{value:"<strong>Branching and Merging</strong>",id:"branching-and-merging",level:2},{value:"<strong>Undoing Changes</strong>",id:"undoing-changes",level:2},{value:"<strong>Other Useful Commands</strong>",id:"other-useful-commands",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"git-cheatsheet",children:"Git Cheatsheet"})}),"\n",(0,r.jsx)(t.p,{children:"A quick reference guide to the most commonly used Git commands."}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"repository-setup",children:(0,r.jsx)(t.strong,{children:"Repository Setup"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Command"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git init"})}),(0,r.jsx)(t.td,{children:"Initialize a new Git repository locally."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git clone <repo-url>"})}),(0,r.jsx)(t.td,{children:"Clone a remote repository to your local machine."})]})]})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"working-with-changes",children:(0,r.jsx)(t.strong,{children:"Working with Changes"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Command"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git status"})}),(0,r.jsx)(t.td,{children:"Check the status of changes in the working directory."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git add <file>"})}),(0,r.jsx)(t.td,{children:"Stage a specific file for commit."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git add ."})}),(0,r.jsx)(t.td,{children:"Stage all changes."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:'git commit -m "message"'})}),(0,r.jsx)(t.td,{children:"Commit staged changes with a descriptive message."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git log"})}),(0,r.jsx)(t.td,{children:"View commit history."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git diff"})}),(0,r.jsx)(t.td,{children:"Show changes between working directory and last commit."})]})]})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"working-with-remote-repositories",children:(0,r.jsx)(t.strong,{children:"Working with Remote Repositories"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Command"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git remote add origin <repo-url>"})}),(0,r.jsx)(t.td,{children:"Connect a local repository to a remote one."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git push origin main"})}),(0,r.jsx)(t.td,{children:"Push changes to the main branch of the remote repository."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git pull origin main"})}),(0,r.jsx)(t.td,{children:"Fetch and merge changes from the remote repository."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git fetch"})}),(0,r.jsx)(t.td,{children:"Retrieve changes from the remote repository without merging."})]})]})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"branching-and-merging",children:(0,r.jsx)(t.strong,{children:"Branching and Merging"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Command"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git branch"})}),(0,r.jsx)(t.td,{children:"List all branches."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git branch <branch-name>"})}),(0,r.jsx)(t.td,{children:"Create a new branch."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git checkout <branch-name>"})}),(0,r.jsx)(t.td,{children:"Switch to an existing branch."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git checkout -b <branch-name>"})}),(0,r.jsx)(t.td,{children:"Create and switch to a new branch."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git merge <branch-name>"})}),(0,r.jsx)(t.td,{children:"Merge changes from another branch into the current branch."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git rebase <branch-name>"})}),(0,r.jsx)(t.td,{children:"Reapply commits on top of another base branch."})]})]})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"undoing-changes",children:(0,r.jsx)(t.strong,{children:"Undoing Changes"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Command"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git reset --soft <commit-hash>"})}),(0,r.jsx)(t.td,{children:"Reset to a previous commit but keep changes staged."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git reset --hard <commit-hash>"})}),(0,r.jsx)(t.td,{children:"Reset to a previous commit and discard all changes."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git revert <commit-hash>"})}),(0,r.jsx)(t.td,{children:"Undo a commit by creating a new commit that reverses it."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git checkout -- <file>"})}),(0,r.jsx)(t.td,{children:"Discard local changes to a specific file."})]})]})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"other-useful-commands",children:(0,r.jsx)(t.strong,{children:"Other Useful Commands"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Command"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git stash"})}),(0,r.jsx)(t.td,{children:"Temporarily save changes without committing."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git stash pop"})}),(0,r.jsx)(t.td,{children:"Reapply stashed changes."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git tag <tag-name>"})}),(0,r.jsx)(t.td,{children:"Create a tag for a specific commit."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"git show <commit-hash>"})}),(0,r.jsx)(t.td,{children:"Display detailed information about a commit."})]})]})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsxs)(t.p,{children:["For more advanced Git usage, refer to the official documentation: ",(0,r.jsx)(t.a,{href:"https://git-scm.com/doc",children:"Git Documentation"}),"."]})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);