"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6265],{8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(6540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},9017:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Lessons/Chapter-5/Chapter-5.4","title":"5.4 Using `.gitignore` to Exclude Files (Optional)","description":"Not every file in your project needs to be tracked by Git. Temporary files, logs, virtual environments, or system files can clutter your repository and should be excluded.","source":"@site/docs/Lessons/Chapter-5/Chapter-5.4.md","sourceDirName":"Lessons/Chapter-5","slug":"/Lessons/Chapter-5/Chapter-5.4","permalink":"/linux-101/docs/Lessons/Chapter-5/Chapter-5.4","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"5.4 Using `.gitignore` to Exclude Files (Optional)"},"sidebar":"tutorialSidebar","previous":{"title":"5.3 Initializing a Local Git Repository","permalink":"/linux-101/docs/Lessons/Chapter-5/Chapter-5.3"},"next":{"title":"5.5 Working with Branches and Commits","permalink":"/linux-101/docs/Lessons/Chapter-5/Chapter-5.5"}}');var r=i(4848),s=i(8453);const o={title:"5.4 Using `.gitignore` to Exclude Files (Optional)"},l=void 0,a={},c=[{value:"Creating a <code>.gitignore</code> File",id:"creating-a-gitignore-file",level:3},{value:"Checking What Git Ignores",id:"checking-what-git-ignores",level:3},{value:"Important Notes",id:"important-notes",level:3},{value:"Example: Minimal <code>.gitignore</code> for Python Projects",id:"example-minimal-gitignore-for-python-projects",level:3}];function d(e){const n={code:"code",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Not every file in your project needs to be tracked by Git. Temporary files, logs, virtual environments, or system files can clutter your repository and should be excluded."}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:".gitignore"})," file tells Git ",(0,r.jsx)(n.strong,{children:"which files or directories to skip"})," when tracking changes."]}),"\n",(0,r.jsxs)(n.h3,{id:"creating-a-gitignore-file",children:["Creating a ",(0,r.jsx)(n.code,{children:".gitignore"})," File"]}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:".gitignore"})," file in the root of your repository:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"touch .gitignore\n"})}),"\n",(0,r.jsx)(n.p,{children:"Open it in a text editor and list the files or patterns you want Git to ignore.\nExample:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Ignore system and temporary files\n.DS_Store\nThumbs.db\n*.tmp\n*.log\n\n# Ignore Python cache and environment folders\n__pycache__/\n.env/\nvenv/\n\n# Ignore build artifacts\nbuild/\ndist/\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"checking-what-git-ignores",children:"Checking What Git Ignores"}),"\n",(0,r.jsx)(n.p,{children:"To verify which files are ignored:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git status --ignored\n"})}),"\n",(0,r.jsx)(n.p,{children:"Ignored files will appear under \u201cIgnored files.\u201d"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"important-notes",children:"Important Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:".gitignore"})," file itself should ",(0,r.jsx)(n.strong,{children:"be tracked"})," so all collaborators use the same rules:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'git add .gitignore\ngit commit -m "Add .gitignore to exclude temporary and environment files"\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Adding a file to ",(0,r.jsx)(n.code,{children:".gitignore"})," ",(0,r.jsx)(n.strong,{children:"won\u2019t untrack it"})," if it\u2019s already committed. To stop tracking it:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git rm --cached <filename>\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["You can also set a ",(0,r.jsx)(n.strong,{children:"global ignore list"})," for all repositories:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git config --global core.excludesfile ~/.gitignore_global\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"example-minimal-gitignore-for-python-projects",children:["Example: Minimal ",(0,r.jsx)(n.code,{children:".gitignore"})," for Python Projects"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Byte-compiled / cache files\n__pycache__/\n*.py[cod]\n\n# Virtual environments\nvenv/\n.env/\n\n# Logs and temporary files\n*.log\n*.tmp\n\n# System files\n.DS_Store\nThumbs.db\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Using ",(0,r.jsx)(n.code,{children:".gitignore"})," right after initializing your repository helps keep your project clean and prevents unwanted files from being committed."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);