"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1769],{3624:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"Lessons/Chapter-5/Chapter-5.5","title":"5.5 Working with Branches and Commits","description":"Branches let you work on new features, fixes, or experiments without affecting your main codebase. They make it easier to test ideas safely and keep your project history organized.","source":"@site/docs/Lessons/Chapter-5/Chapter-5.5.md","sourceDirName":"Lessons/Chapter-5","slug":"/Lessons/Chapter-5/Chapter-5.5","permalink":"/linux-101/docs/Lessons/Chapter-5/Chapter-5.5","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"5.5 Working with Branches and Commits"},"sidebar":"tutorialSidebar","previous":{"title":"5.4 Using `.gitignore` to Exclude Files (Optional)","permalink":"/linux-101/docs/Lessons/Chapter-5/Chapter-5.4"},"next":{"title":"5.6 Best Practices for Local Repositories","permalink":"/linux-101/docs/Lessons/Chapter-5/Chapter-5.6"}}');var s=r(4848),a=r(8453);const i={title:"5.5 Working with Branches and Commits"},c=void 0,o={},h=[{value:"Understanding Branches",id:"understanding-branches",level:3},{value:"Creating and Switching Branches",id:"creating-and-switching-branches",level:3},{value:"Making Changes and Committing",id:"making-changes-and-committing",level:3},{value:"Merging Branches",id:"merging-branches",level:3},{value:"Deleting a Branch",id:"deleting-a-branch",level:3}];function l(e){const n={blockquote:"blockquote",code:"code",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Branches let you work on new features, fixes, or experiments without affecting your main codebase. They make it easier to test ideas safely and keep your project history organized."}),"\n",(0,s.jsx)(n.h3,{id:"understanding-branches",children:"Understanding Branches"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"main"})})," branch is your stable, production-ready version."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Feature branches"})," allow you to develop and test changes independently."]}),"\n",(0,s.jsxs)(n.li,{children:["Once your work is reviewed or tested, you can merge it back into ",(0,s.jsx)(n.code,{children:"main"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"creating-and-switching-branches",children:"Creating and Switching Branches"}),"\n",(0,s.jsx)(n.p,{children:"To create and switch to a new branch in one step:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git checkout -b feature-branch\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83d\udca1 Use short, descriptive branch names like ",(0,s.jsx)(n.code,{children:"feature/login-form"})," or ",(0,s.jsx)(n.code,{children:"fix/typo-readme"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"making-changes-and-committing",children:"Making Changes and Committing"}),"\n",(0,s.jsx)(n.p,{children:"After editing files, add and commit your changes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'git add feature.txt\ngit commit -m "Add new feature"\n'})}),"\n",(0,s.jsx)(n.p,{children:"You can view your commit history anytime:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git log --oneline\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"merging-branches",children:"Merging Branches"}),"\n",(0,s.jsx)(n.p,{children:"Once your work is ready, merge it into the main branch:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git checkout main\ngit merge feature-branch\n"})}),"\n",(0,s.jsx)(n.p,{children:"If there are no conflicts, Git will automatically combine the changes."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"deleting-a-branch",children:"Deleting a Branch"}),"\n",(0,s.jsx)(n.p,{children:"After merging, you can safely delete the feature branch:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git branch -d feature-branch\n"})}),"\n",(0,s.jsx)(n.p,{children:"If the branch hasn\u2019t been merged and you still want to remove it:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git branch -D feature-branch\n"})}),"\n",(0,s.jsx)(n.p,{children:"Branches help you organize your work and keep your main codebase stable. Use them for every new feature or experiment, and merge regularly to keep your project history clean."})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var t=r(6540);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);